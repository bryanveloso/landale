generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Challenge {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  seeds       Seed[]
  checkpoints Checkpoint[]

  @@map("challenges")
}

model Checkpoint {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  trainer     String
  order       Int
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  challengeId Int
  results     Result[]

  @@index([challengeId])
  @@index([order])
  @@map("checkpoints")
}

model Seed {
  id          Int       @id
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  challengeId Int
  results     Result[]

  @@index([challengeId])
  @@map("seeds")
}

model Result {
  id           Int        @id @default(autoincrement())
  seed         Seed       @relation(fields: [seedId], references: [id])
  seedId       Int
  checkpoint   Checkpoint @relation(fields: [checkpointId], references: [id])
  checkpointId Int
  result       Boolean

  @@unique([seedId, checkpointId])
  @@index([seedId])
  @@index([checkpointId])
  @@index([result])
  @@map("results")
}

model AuditLog {
  id            String   @id @default(cuid())
  timestamp     DateTime @default(now())
  correlationId String?
  action        String
  category      String
  actorType     String?
  actorId       String?
  actorIp       String?
  resourceType  String?
  resourceId    String?
  resourceName  String?
  changesBefore String?  @db.Text
  changesAfter  String?  @db.Text
  result        String
  error         String?
  metadata      String?  @db.Text

  @@index([timestamp])
  @@index([correlationId])
  @@index([category])
  @@index([action])
  @@index([result])
  @@map("audit_logs")
}
