name: Dashboard CI

on:
  push:
    branches: [main, feature/*]
    paths:
      - 'apps/dashboard/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/dashboard/**'
  workflow_dispatch:

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.18

      - name: Install dependencies
        run: |
          cd apps/dashboard
          bun install

      - name: Run TypeScript checks
        run: |
          cd apps/dashboard
          bun run typecheck

      - name: Run tests
        run: |
          cd apps/dashboard
          bun test

      - name: Run linting
        run: |
          cd apps/dashboard
          bun run lint

  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            os: 'macos-latest'
            bundle: 'dmg'
          - platform: 'ubuntu-22.04'
            os: 'ubuntu-22.04'
            bundle: 'appimage'
          - platform: 'windows-latest'
            os: 'windows-latest'
            bundle: 'nsis'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.18

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: |
          cd apps/dashboard
          bun install

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: apps/dashboard
          tauriScript: bunx tauri

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-${{ matrix.platform }}
          path: |
            apps/dashboard/src-tauri/target/*/release/bundle/
          retention-days: 7

  package:
    name: Create Release Package
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Organize release assets
        run: |
          mkdir -p release-assets

          # Find and copy macOS DMG
          find artifacts/dashboard-macos-latest -name "*.dmg" -exec cp {} release-assets/landale-dashboard-macos.dmg \;

          # Find and copy Windows installer
          find artifacts/dashboard-windows-latest -name "*.exe" -exec cp {} release-assets/landale-dashboard-windows.exe \;

          # Find and copy Linux AppImage
          find artifacts/dashboard-ubuntu-22.04 -name "*.AppImage" -exec cp {} release-assets/landale-dashboard-linux.AppImage \;

          echo "📦 Release assets prepared:"
          ls -la release-assets/

          echo "📏 Asset sizes:"
          du -h release-assets/* | sort -h

      - name: Create rolling release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dashboard-latest
          name: 'Landale Dashboard Latest Build'
          body: |
            ## 🖥️ Landale Dashboard - Latest Build

            **Note: These are development builds. Assets are automatically created and replaced on every new commit.**

            ### 📦 Platform Packages:
            - **landale-dashboard-macos.dmg** - macOS Universal Binary (Apple Silicon + Intel)
            - **landale-dashboard-windows.exe** - Windows x64 Installer
            - **landale-dashboard-linux.AppImage** - Linux x64 Portable Executable

            ### 🔧 System Requirements:
            - **macOS**: 10.15+ (Catalina or later)
            - **Windows**: Windows 10+ (64-bit)
            - **Linux**: x64 systems with GTK3 support

            Built from commit: ${{ github.sha }}
          files: |
            release-assets/*
          prerelease: true
          make_latest: false

      - name: Create release summary
        run: |
          echo "## 🖥️ Landale Dashboard Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Platform Packages:" >> $GITHUB_STEP_SUMMARY
          echo "- **landale-dashboard-macos.dmg** - macOS Universal Binary" >> $GITHUB_STEP_SUMMARY
          echo "- **landale-dashboard-windows.exe** - Windows x64 Installer" >> $GITHUB_STEP_SUMMARY
          echo "- **landale-dashboard-linux.AppImage** - Linux x64 Portable" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Download Link:" >> $GITHUB_STEP_SUMMARY
          echo "- [📥 Latest Release](https://github.com/bryanveloso/landale/releases/tag/dashboard-latest)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📏 Package Sizes:" >> $GITHUB_STEP_SUMMARY
          for file in release-assets/*; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              size=$(du -h "$file" | cut -f1)
              echo "- $filename: $size" >> $GITHUB_STEP_SUMMARY
            fi
          done
