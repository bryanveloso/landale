name: Elixir CI

on:
  push:
    branches: [ main, feature/* ]
    paths: [ 'apps/server/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'apps/server/**' ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - elixir: '1.16.3'
            otp: '26.2'
          - elixir: '1.17.x'
            otp: '27.x'
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: server_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache Elixir dependencies
        uses: actions/cache@v4
        with:
          path: |
            apps/server/deps
            apps/server/_build
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('apps/server/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
            ${{ runner.os }}-mix-

      - name: Install Elixir dependencies
        working-directory: apps/server
        run: |
          mix deps.get
          mix deps.compile

      - name: Check formatting
        working-directory: apps/server
        run: mix format --check-formatted

      - name: Run Credo
        working-directory: apps/server
        run: mix credo --strict

      - name: Compile (warnings as errors)
        working-directory: apps/server
        run: mix compile --warnings-as-errors

      - name: Create test database
        working-directory: apps/server
        run: mix ecto.create

      - name: Run database migrations
        working-directory: apps/server
        run: mix ecto.migrate

      - name: Run tests with coverage
        working-directory: apps/server
        run: mix coveralls.github
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/server_test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.16.3'
          otp-version: '26.2'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            apps/server/deps
            apps/server/_build
          key: ${{ runner.os }}-security-mix-${{ hashFiles('apps/server/mix.lock') }}

      - name: Install dependencies
        working-directory: apps/server
        run: mix deps.get

      - name: Run security audit
        working-directory: apps/server
        run: mix deps.audit

      - name: Check for retired packages
        working-directory: apps/server
        run: mix hex.audit
