import Config

# Configure environment for runtime checks
config :server, env: :dev

# Configure your database
config :server, Server.Repo,
  username: "Avalonstar",
  password: "",
  hostname: "localhost",
  port: 5432,
  database: "landale",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10,
  queue_target: 50,
  queue_interval: 1_000,
  timeout: 15_000

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :server, ServerWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {0, 0, 0, 0}, port: 7175],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base:
    System.get_env("SECRET_KEY_BASE_DEV", "n+b/75+noZv72qfKLSiLirB8af8MDiXd2W5RRHDIxHTEPgIVli4x1a9RgSzs7pOG"),
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Enable dev routes for dashboard and mailbox
config :server, dev_routes: true

# OBS WebSocket configuration
config :server, :obs_websocket_url, "ws://100.106.173.14:4455"

# Enhanced logging for development with metadata
config :logger, :console,
  format: "[$time] [$level] $metadata$message\n",
  metadata: :all,
  level: :debug

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# IronMON TCP server port
config :server, :ironmon_tcp_port, String.to_integer(System.get_env("IRONMON_TCP_PORT") || "8080")

# Service discovery configuration
# Using Tailscale hostnames/IPs for proper service location
config :server, :services,
  phononmaser: [
    # Phononmaser runs on the same machine as Phoenix
    health_url: "http://zelan:8890/health",
    host: "zelan",
    port: 8890
  ],
  seed: [
    # Seed also runs on the same machine as Phoenix
    health_url: "http://zelan:8891/health",
    host: "zelan",
    port: 8891
  ],
  obs: [
    # OBS runs on Demi (streaming machine)
    host: "demi",
    ip: "100.106.173.14",
    port: 4455
  ]
